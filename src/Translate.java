import java.util.Map;

import static java.util.Map.entry;

public class Translate {
    public static final Map <String,Integer> ROMAN_NUMERALS = Map.ofEntries(
            entry("I", 1),
            entry("II", 2),
            entry("III", 3),
            entry("IV", 4),
            entry("V", 5),
            entry("VI", 6),
            entry( "VII", 7),
            entry("VIII", 8),
            entry("IX", 9),
            entry("X", 10),
            entry("XI", 11),
            entry("XII", 12),
            entry("XIII", 13),
            entry("XIV", 14),
            entry("XV", 15),
            entry("XVI", 16),
            entry( "XVII", 17),
            entry("XVIII", 18),
            entry("XIX", 19),
            entry("XX", 20),
            entry("XXI", 21),
            entry("XXII", 22),
            entry("XXIII", 23),
            entry("XXIV", 24),
            entry("XXV", 25),
            entry("XXVI", 26),
            entry("XXVII", 27),
            entry("XXVIII", 28),
            entry("XXIX", 29),
            entry("XXX", 30),
            entry("XXXI", 31),
            entry("XXXII", 32),
            entry("XXXIII", 33),
            entry("XXXIV", 34),
            entry("XXXV", 35),
            entry("XXXVI", 36),
            entry("XXXVII", 37),
            entry("XXXVIII", 38),
            entry("XXXIX", 39),
            entry("XL", 40),
            entry("XLI", 41),
            entry("XLII", 42),
            entry("XLIII", 43),
            entry("XLIV", 44),
            entry("XLV", 45),
            entry("XLVI", 46),
            entry("XLVII", 47),
            entry("XLVIII", 48),
            entry("XLIX", 49),
            entry("L", 50),
            entry("LI", 51),
            entry("LII", 52),
            entry("LIII", 53),
            entry("LIV", 54),
            entry("LV", 55),
            entry("LVI", 56),
            entry("LVII", 57),
            entry("LVIII", 58),
            entry("LIX", 59),
            entry("LX", 60),
            entry("LXI", 61),
            entry("LXII", 62),
            entry("LXIII", 63),
            entry("LXIV", 64),
            entry("LXV", 65),
            entry("LXVI", 66),
            entry("LXVII", 67),
            entry("LXVIII", 68),
            entry("LXIX", 69),
            entry("LXX", 70),
            entry("LXXI", 71),
            entry("LXXII", 72),
            entry("LXXIII", 73),
            entry("LXXIV", 74),
            entry("LXXV", 75),
            entry("LVXXVI", 76),
            entry("LXXVII", 77),
            entry("LXXVIII", 78),
            entry("LXXIX", 79),
            entry("LXXX", 80),
            entry("LXXXI", 81),
            entry("LXXXII", 82),
            entry("LXXXIII", 83),
            entry("LXXXIV", 84),
            entry("LXXXV", 85),
            entry("LXXXVI", 86),
            entry("LXXXVII", 87),
            entry("LXXXVIII", 88),
            entry("LXXXIX", 89),
            entry("XC", 90),
            entry("XCI", 91),
            entry("XCII", 92),
            entry("XCIII", 93),
            entry("XCIV", 94),
            entry("XCV", 95),
            entry("XCVI", 96),
            entry("XCVII", 97),
            entry("XCVIII", 98),
            entry("XCIX", 99),
            entry("C", 100)
     );
    public static String searchKey(int value) throws Exception {
        for (Map.Entry<String, Integer> search:
             ROMAN_NUMERALS.entrySet()) {
            if (search.getValue() == value){
                return search.getKey();
            }
        }
        throw new Exception("Key not found");

    }


}